[	
	{	
		"id": "aggLabelFilter",
		"defaultValue": "''",
		"definition": "string name for filter to use on the aggregate label ('currency', 'date', etc..) defaults to cellFilter if not set.",
		"plunker": "Link"
	},
	{	
		"id": "cellClass",
		"defaultValue": "''",
		"definition": "Appends a css class for the column cells",
		"plunker": "Link"
	},
	{	
		"id": "cellFilter",
		"defaultValue": "''",
		"definition": "string name for filter to use on the cell ('currency', 'date', etc..)",
		"plunker": "Link"
	},
	{	
		"id": "cellTemplate",
		"defaultValue": "<div ng-class=\"'ngCellText colt' + $index\"><span ng-cell-text>{{COL_FIELD CUSTOM_FILTERS}}</span></div>",
		"definition": "Sets the cell template for the column. See github wiki for more details.",
		"plunker": "Link"
	},
	{	
		"id": "displayName",
		"defaultValue": "field",
		"definition": "Sets the pretty display name of the column. default is the field given",
		"plunker": "Link"
	},
	{	
		"id": "editableCellTemplate",
		"defaultValue": "<input ng-cell-input ng-class=\"'colt' + $index\" ng-model=\"COL_FIELD\" />",
		"definition": "Sets the editableCellTemplate for the column. Displayed when user uses enableFocusedCellEdit and cell is focused.",
		"plunker": "Link"
	},
	{	
		"id": "enableCellEdit",
		"defaultValue": "false",
		"definition": "Displays cellTemplate when user is not focused on cell. Displays editableCellTemplate when user focuses on cell.",
		"plunker": "Link"
	},
	{	
		"id": "field",
		"defaultValue": "''",
		"definition": "The string name of the property in your data model you want that column to represent. Can also be a property path on your data model. 'foo.bar.myField', 'Name.First', etc..",
		"plunker": "Link"
	},
    {	
		"id": "groupable",
		"defaultValue": "true",
		"definition": "Whether or not the user is allowed to group the column",
		"plunker": "Link"
	},
	{	
		"id": "headerCellTemplate",
		"defaultValue": "<div ng-click=\"col.sort()\" class=\"ngHeaderSortColumn {{col.headerClass}}\" ng-style=\"{'cursor': col.cursor}\" ng-class=\"{'ngSorted': !noSortVisible }\"><div class=\"ngHeaderText colt{{$index}}\">{{col.displayName}}</div><div class=\"ngSortButtonDown\" ng-show=\"col.showSortButtonDown()\"></div><div class=\"ngSortButtonUp\" ng-show=\"col.showSortButtonUp()\"></div></div><div ng-show=\"col.resizable\" class=\"ngHeaderGrip\" ng-click=\"col.gripClick($event)\" ng-mousedown=\"col.gripOnMouseDown($event)\"></div>",
		"definition": "Sets the template for the column header cell. See github wiki for more details.",
		"plunker": "Link"
	},
	{	
		"id": "headerClass",
		"defaultValue": "''",
		"definition": "Appends a css class for the column header.",
		"plunker": "Link"
	},
	{	
		"id": "maxWidth",
		"defaultValue": "9000",
		"definition": "Sets the maximum width of the column.",
		"plunker": "Link"
	},
	{	
		"id": "minWidth",
		"defaultValue": "50",
		"definition": "Sets the minimum width of the column.",
		"plunker": "Link"
	},
	{	
		"id": "pinnable",
		"defaultValue": "true",
		"definition": "Whether or not column can be pinned to the left.",
		"plunker": "Link"
	},
	{	
		"id": "resizable",
		"defaultValue": "true",
		"definition": "Whether or not column is resizable.",
		"plunker": "Link"
	},
	{	
		"id": "sortable",
		"defaultValue": "true",
		"definition": "Whether or not column is sortable.",
		"plunker": "Link"
	},
	{	
		"id": "sortFn",
		"defaultValue": "Based on the detected data type",
		"definition": "Sets the sort function for the column. Useful when you have data that is formatted in an unusal way or if you want to sort on an underlying data type. Example: function(a,b){return a > b}",
		"plunker": "Link"
	},
	{	
		"id": "width",
		"defaultValue": "'*'",
		"definition": "Sets the width of the column. Can be a fixed width in pixels as an int (42), string px('42px'), percentage string ('42%'), weighted asterisks (width divided by total number of *'s is all column definition widths)  See github wiki for more details.",
		"plunker": "Link"
	}
]